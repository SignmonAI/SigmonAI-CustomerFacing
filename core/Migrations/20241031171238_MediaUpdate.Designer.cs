// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using core.Contexts;

#nullable disable

namespace core.Migrations
{
    [DbContext(typeof(SigmonDbContext))]
    [Migration("20241031171238_MediaUpdate")]
    partial class MediaUpdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("core.Models.Bill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly?>("ExpiralDate")
                        .HasColumnType("date")
                        .HasColumnName("expiral_date");

                    b.Property<DateOnly?>("PaymentDate")
                        .HasColumnType("date")
                        .HasColumnName("payment_date");

                    b.Property<decimal>("PaymentDue")
                        .HasColumnType("decimal(5, 4)")
                        .HasColumnName("payment_due");

                    b.Property<Guid?>("SubscriptionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("core.Models.Media", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Content")
                        .HasColumnType("varbinary(MAX)")
                        .HasColumnName("content");

                    b.HasKey("Id");

                    b.ToTable("Medias");
                });

            modelBuilder.Entity("core.Models.Request", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Answear")
                        .HasColumnType("varchar(10)")
                        .HasColumnName("answer");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<Guid?>("MediaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MediaId");

                    b.HasIndex("UserId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("core.Models.Subscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("PaymentDue")
                        .HasColumnType("decimal(5, 4)")
                        .HasColumnName("payment_due");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("core.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .HasColumnType("varchar(17)")
                        .HasColumnName("phone");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("core.Models.Bill", b =>
                {
                    b.HasOne("core.Models.Subscription", "Subscription")
                        .WithMany("Bills")
                        .HasForeignKey("SubscriptionId");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("core.Models.Request", b =>
                {
                    b.HasOne("core.Models.Media", "Media")
                        .WithMany()
                        .HasForeignKey("MediaId");

                    b.HasOne("core.Models.User", "User")
                        .WithMany("Requests")
                        .HasForeignKey("UserId");

                    b.Navigation("Media");

                    b.Navigation("User");
                });

            modelBuilder.Entity("core.Models.Subscription", b =>
                {
                    b.HasOne("core.Models.User", "User")
                        .WithOne("Subscription")
                        .HasForeignKey("core.Models.Subscription", "UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("core.Models.Subscription", b =>
                {
                    b.Navigation("Bills");
                });

            modelBuilder.Entity("core.Models.User", b =>
                {
                    b.Navigation("Requests");

                    b.Navigation("Subscription");
                });
#pragma warning restore 612, 618
        }
    }
}
